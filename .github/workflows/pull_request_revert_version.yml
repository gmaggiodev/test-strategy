# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: 
      - 'hotfix-**'
      - 'develop'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    if: github.event.commits[0].author.name != 'github-actions'
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.ACTIONS }}

      - name: Read Versions.json
        id: version
        uses: juliangruber/read-file-action@v1.1.6
        with:
          path: PreRequirements/Versions.json

      - name: print variables
        run: 
          echo "${{ steps.version.outputs.content }}"
          echo "${{ fromJson(steps.version.outputs.content).BackEnd }}"
          echo "${{github.actor}}"
          echo startsWith(${{steps.version.outputs.content.BackEnd}}, "branch:")
          

      - name: Update Versions.json version
        uses: jossef/action-set-json-field@v2.1
        if: startsWith(${{steps.version.outputs.content.BackEnd}}, "branch:") && ${{steps.version.outputs.content.BackEnd}} != "branch:${{ github.ref_name }}"
        with:
          file: PreRequirements/Versions.json
          field: BackEnd
          value: "branch:${{ github.ref_name }}"

      - name: Verify Changed files
        uses: tj-actions/verify-changed-files@v13
        id: verify-changed-files
        with:
          files: |
            PreRequirements/Versions.json

      - name: Run step only when any of the above files change.
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "automatic fix version"
          git push
          echo test, and deploy your project.
