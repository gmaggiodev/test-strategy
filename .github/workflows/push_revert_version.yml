# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: 
      - 'hotfix-**'
      - 'develop'

env:
  EXP_BRANCH: 'branch:${{ github.ref_name }}'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    if: github.event.commits[0].author.name != 'github-actions'
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.ACTIONS }}

      - name: Read Version.json
        id: version
        uses: juliangruber/read-file-action@v1.1.6
        with:
          path: Version.json

      - name: print variables
        run: 
          echo "1:${{ steps.version.outputs.content }}\n"
          echo "2:${{ fromJson(steps.version.outputs.content).BackEnd }}\n"
          echo "3:${{github.actor}}\n"
          echo "4:${{ contains(fromJson(steps.version.outputs.content).BackEnd, 'branch:')}}\n"
          echo "5:$EXP_BRANCH"
          
      - name: Update Version.json version
        uses: jossef/action-set-json-field@v2.1
        if: ${{ contains(steps.version.outputs.content.BackEnd, 'branch:') && steps.version.outputs.content.BackEnd != env.EXP_BRANCH}}"
        with:
          file: Version.json
          field: BackEnd
          value: "${{env.EXP_BRANCH}}"

      - name: Verify Changed files
        uses: tj-actions/verify-changed-files@v13
        id: verify-changed-files
        with:
          files: |
            Version.json

      - name: Run step only when any of the above files change.
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "automatic fix version"
          git push
          echo test, and deploy your project.
